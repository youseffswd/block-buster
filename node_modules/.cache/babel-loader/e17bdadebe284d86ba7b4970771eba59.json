{"ast":null,"code":"import{IoIosStar}from\"react-icons/io\";import{Link}from\"react-router-dom\";import{connect}from\"react-redux\";import{getSingleTrailer,getMovie,getTv}from\"../../store/actions/moviesAction\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SingleMovieCard=function SingleMovieCard(_ref){var movie=_ref.movie,_ref$version=_ref.version,version=_ref$version===void 0?localStorage.getItem(\"version\"):_ref$version,kind=_ref.kind,getSingleTrailer=_ref.getSingleTrailer,getMovie=_ref.getMovie,getTv=_ref.getTv;var title=movie.title,poster_path=movie.poster_path,vote_average=movie.vote_average,id=movie.id,name=movie.name;var posterPath=\"https://image.tmdb.org/t/p/w200\";return/*#__PURE__*/_jsxs(Link,{onClick:function onClick(){getSingleTrailer(null);getTv(null);getMovie(null);},to:\"/block-buster/watch/\".concat(kind,\"/\").concat(id),className:\"movieCard\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"img  mb-2 text-center\",children:poster_path?/*#__PURE__*/_jsx(\"img\",{className:\"img-fluid\",src:\"\".concat(posterPath).concat(poster_path),alt:\"poster\"}):/*#__PURE__*/_jsx(\"div\",{className:\"mx-auto\",children:\"no poster available\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(version,\" info  \"),children:[/*#__PURE__*/_jsxs(\"h4\",{className:\" mb-2 \",children:[title||name,\" \"]}),/*#__PURE__*/_jsxs(\"div\",{className:\" d-flex justify-content-center align-items-center mb-0 \",children:[/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(IoIosStar,{})}),/*#__PURE__*/_jsx(\"big\",{children:vote_average}),/*#__PURE__*/_jsx(\"small\",{children:\"/10\"})]})]})]});};var getState=function getState(state){return{version:state.version};};export default connect(getState,{getSingleTrailer:getSingleTrailer,getMovie:getMovie,getTv:getTv})(SingleMovieCard);","map":{"version":3,"sources":["D:/block-buster/src/components/renderMovies/SingleMovieCard.js"],"names":["IoIosStar","Link","connect","getSingleTrailer","getMovie","getTv","SingleMovieCard","movie","version","localStorage","getItem","kind","title","poster_path","vote_average","id","name","posterPath","getState","state"],"mappings":"AAAA,OAASA,SAAT,KAA0B,gBAA1B,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OACIC,gBADJ,CAEIC,QAFJ,CAGIC,KAHJ,KAIO,kCAJP,C,wFAKA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAOlB,IANFC,CAAAA,KAME,MANFA,KAME,mBALFC,OAKE,CALFA,OAKE,uBALQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAKR,cAJFC,IAIE,MAJFA,IAIE,CAHFR,gBAGE,MAHFA,gBAGE,CAFFC,QAEE,MAFFA,QAEE,CADFC,KACE,MADFA,KACE,IACMO,CAAAA,KADN,CACqDL,KADrD,CACMK,KADN,CACaC,WADb,CACqDN,KADrD,CACaM,WADb,CAC0BC,YAD1B,CACqDP,KADrD,CAC0BO,YAD1B,CACwCC,EADxC,CACqDR,KADrD,CACwCQ,EADxC,CAC4CC,IAD5C,CACqDT,KADrD,CAC4CS,IAD5C,CAEF,GAAMC,CAAAA,UAAU,CAAG,iCAAnB,CACA,mBACI,MAAC,IAAD,EACI,OAAO,CAAE,kBAAM,CACXd,gBAAgB,CAAC,IAAD,CAAhB,CACAE,KAAK,CAAC,IAAD,CAAL,CACAD,QAAQ,CAAC,IAAD,CAAR,CACH,CALL,CAMI,EAAE,+BAAyBO,IAAzB,aAAiCI,EAAjC,CANN,CAOI,SAAS,CAAC,WAPd,wBAQI,YAAK,SAAS,CAAC,uBAAf,UACKF,WAAW,cACR,YACI,SAAS,CAAC,WADd,CAEI,GAAG,WAAKI,UAAL,SAAkBJ,WAAlB,CAFP,CAGI,GAAG,CAAC,QAHR,EADQ,cAOR,YAAK,SAAS,CAAC,SAAf,iCARR,EARJ,cAmBI,aAAK,SAAS,WAAKL,OAAL,WAAd,wBACI,YAAI,SAAS,CAAC,QAAd,WAAwBI,KAAK,EAAII,IAAjC,OADJ,cAEI,aACI,SAAS,0DADb,wBAEI,mCACI,KAAC,SAAD,IADJ,EAFJ,cAKI,qBAAMF,YAAN,EALJ,cAMI,8BANJ,GAFJ,GAnBJ,GADJ,CAiCH,CA3CD,CA6CA,GAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,CAAI,CACtB,MAAO,CACHX,OAAO,CAAEW,KAAK,CAACX,OADZ,CAAP,CAGH,CAJD,CAMA,cAAeN,CAAAA,OAAO,CAACgB,QAAD,CAAW,CAC7Bf,gBAAgB,CAAhBA,gBAD6B,CAE7BC,QAAQ,CAARA,QAF6B,CAG7BC,KAAK,CAALA,KAH6B,CAAX,CAAP,CAIZC,eAJY,CAAf","sourcesContent":["import { IoIosStar } from \"react-icons/io\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    getSingleTrailer,\r\n    getMovie,\r\n    getTv,\r\n} from \"../../store/actions/moviesAction\";\r\nconst SingleMovieCard = ({\r\n    movie,\r\n    version = localStorage.getItem(\"version\"),\r\n    kind,\r\n    getSingleTrailer,\r\n    getMovie,\r\n    getTv,\r\n}) => {\r\n    const { title, poster_path, vote_average, id, name } = movie;\r\n    const posterPath = \"https://image.tmdb.org/t/p/w200\";\r\n    return (\r\n        <Link\r\n            onClick={() => {\r\n                getSingleTrailer(null);\r\n                getTv(null);\r\n                getMovie(null);\r\n            }}\r\n            to={`/block-buster/watch/${kind}/${id}`}\r\n            className=\"movieCard\">\r\n            <div className=\"img  mb-2 text-center\">\r\n                {poster_path ? (\r\n                    <img\r\n                        className=\"img-fluid\"\r\n                        src={`${posterPath}${poster_path}`}\r\n                        alt=\"poster\"\r\n                    />\r\n                ) : (\r\n                    <div className=\"mx-auto\">no poster available</div>\r\n                )}\r\n            </div>\r\n            <div className={`${version} info  `}>\r\n                <h4 className=\" mb-2 \">{title || name} </h4>\r\n                <div\r\n                    className={` d-flex justify-content-center align-items-center mb-0 `}>\r\n                    <span>\r\n                        <IoIosStar />\r\n                    </span>\r\n                    <big>{vote_average}</big>\r\n                    <small>/10</small>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nconst getState = state => {\r\n    return {\r\n        version: state.version,\r\n    };\r\n};\r\n\r\nexport default connect(getState, {\r\n    getSingleTrailer,\r\n    getMovie,\r\n    getTv,\r\n})(SingleMovieCard);\r\n"]},"metadata":{},"sourceType":"module"}