{"ast":null,"code":"var _jsxFileName = \"D:\\\\block-buster\\\\src\\\\components\\\\renderMovies\\\\RenderMovies.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport RenderMoviesHeading from \"./RenderMoviesHeading\";\nimport RenderSlider from \"./RenderSlider\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport SingleMovieCard from \"./SingleMovieCard\";\nimport GetMorePages from \"../parts/GetMorePages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RenderMovies = props => {\n  _s();\n\n  const {\n    kind,\n    popular,\n    tvPopular,\n    version = localStorage.getItem(\"version\"),\n    slider = true\n  } = props;\n  const [mTType, setMTType] = useState({\n    movies: popular,\n    tv: tvPopular\n  });\n\n  const getMTType = obj => {\n    setMTType(obj);\n  };\n\n  const [page, setPage] = useState(1);\n\n  const getPage = currentPage => {\n    setPage(currentPage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(RenderMoviesHeading, {\n      kind: kind,\n      getMTType: getMTType,\n      page: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), slider ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider mb-5\",\n      children: /*#__PURE__*/_jsxDEV(RenderSlider, {\n        kind: kind,\n        movies: kind === \"movies\" ? mTType.movies : mTType.tv,\n        loop: false,\n        trailer: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: mTType[kind] && mTType[kind].results.map(item => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            className: \"mb-4 mx-auto\",\n            xs: \"6\",\n            md: \"4\",\n            lg: \"3\",\n            children: /*#__PURE__*/_jsxDEV(SingleMovieCard, {\n              kind: kind,\n              movie: item,\n              version: version\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 37\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GetMorePages, {\n        getPage: getPage,\n        type: kind,\n        startingPage: mTType[kind] && mTType[kind].page,\n        total: mTType[kind] && mTType[kind].total_pages,\n        version: version\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(RenderMovies, \"0YpN5hDE7sFQEnr/hIUoYr0iU40=\");\n\n_c = RenderMovies;\n\nconst getState = state => {\n  return {\n    popular: state.movies.popular,\n    tvPopular: state.movies.tvPopular,\n    version: state.version\n  };\n};\n\nexport default connect(getState)(RenderMovies);\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderMovies\");","map":{"version":3,"sources":["D:/block-buster/src/components/renderMovies/RenderMovies.js"],"names":["useState","RenderMoviesHeading","RenderSlider","Col","Row","connect","SingleMovieCard","GetMorePages","RenderMovies","props","kind","popular","tvPopular","version","localStorage","getItem","slider","mTType","setMTType","movies","tv","getMTType","obj","page","setPage","getPage","currentPage","results","map","item","id","total_pages","getState","state"],"mappings":"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","sourcesContent":["import {useState} from \"react\"\r\nimport RenderMoviesHeading from \"./RenderMoviesHeading\"\r\nimport RenderSlider from \"./RenderSlider\"\r\nimport {Col,Row} from \"react-bootstrap\"\r\nimport {connect} from \"react-redux\"\r\nimport SingleMovieCard  from \"./SingleMovieCard\"\r\nimport GetMorePages from \"../parts/GetMorePages\"\r\nconst RenderMovies = (props) => {\r\n    const {kind,popular,tvPopular,version = localStorage.getItem(\"version\"),slider = true} = props\r\n    const [mTType,setMTType] = useState({\r\n        movies:popular,\r\n        tv:tvPopular\r\n    })\r\n    const getMTType = (obj) => {\r\n        setMTType(obj)\r\n    }\r\n    const [page,setPage] = useState(1)\r\n    const getPage = (currentPage) => {\r\n        setPage(currentPage)\r\n    }\r\n    return (\r\n        <>\r\n        <RenderMoviesHeading kind={kind} getMTType={getMTType} page={page} />\r\n        {slider ? (\r\n            <div className=\"slider mb-5\">\r\n                <RenderSlider kind={kind} movies={kind === \"movies\" ? mTType.movies : mTType.tv} loop={false} trailer={false} />\r\n            </div>\r\n        ): (\r\n            <>\r\n                \r\n                    <Row >\r\n                        {mTType[kind] && mTType[kind].results.map((item) => {\r\n                            return (\r\n                                <Col key={item.id} className=\"mb-4 mx-auto\" xs=\"6\" md=\"4\" lg=\"3\">\r\n                                    <SingleMovieCard kind={kind} movie={item} version={version} />\r\n                                </Col>\r\n                            )\r\n                        })}\r\n                    </Row>\r\n                    <GetMorePages getPage={getPage} type={kind} startingPage={mTType[kind] && mTType[kind].page} total={mTType[kind] && mTType[kind].total_pages} version={version} />\r\n                \r\n                \r\n            </>\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nconst getState = state => {\r\n    return {\r\n        popular:state.movies.popular,\r\n        tvPopular:state.movies.tvPopular,\r\n        version:state.version\r\n    }\r\n}\r\n\r\nexport default connect(getState)(RenderMovies)"]},"metadata":{},"sourceType":"module"}