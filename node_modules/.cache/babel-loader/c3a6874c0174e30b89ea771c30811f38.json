{"ast":null,"code":"var _jsxFileName = \"D:\\\\block-buster\\\\src\\\\components\\\\renderMovies\\\\RenderMoviesHeading.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getPopular, getTvPopular, getComingSoon, getTopRated, getTvComingSoon, getTvTopRated } from \"../../store/actions/moviesAction\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RenderMoviesHeading = props => {\n  _s();\n\n  const {\n    getMTType,\n    kind,\n    popular,\n    tvPopular,\n    comingSoon,\n    topRated,\n    tvComingSoon,\n    tvTopRated,\n    version = localStorage.getItem(\"version\"),\n    page\n  } = props;\n  const [lis, setLis] = useState({\n    moviesLinks: [{\n      id: 0,\n      content: \"#popular\",\n      data: \"popular\",\n      func: \"getPopular\"\n    }, {\n      id: 1,\n      content: \"#coming soon\",\n      data: \"comingSoon\",\n      func: \"getComingSoon\"\n    }, {\n      id: 2,\n      content: \"#top rated\",\n      data: \"topRated\",\n      func: \"getTopRated\"\n    }],\n    tvLinks: [{\n      id: 0,\n      content: \"#popular\",\n      data: \"tvPopular\",\n      func: \"getTvPopular\"\n    }, {\n      id: 1,\n      content: \"#coming soon\",\n      data: \"tvComingSoon\",\n      func: \"getTvComingSoon\"\n    }, {\n      id: 2,\n      content: \"#top rated\",\n      data: \"tvTopRated\",\n      func: \"getTvTopRated\"\n    }],\n    activeLinkMovie: 0,\n    activeLinkTv: 0\n  });\n  const [mTType, setMTType] = useState({\n    movies: popular,\n    tv: tvPopular\n  });\n  let moviesActionRes = {\n    popular,\n    comingSoon,\n    topRated\n  };\n  let tvActionRes = {\n    tvPopular,\n    tvComingSoon,\n    tvTopRated\n  };\n\n  const setActive = (id, tvId, kind) => {\n    if (kind === \"movie\") {\n      if (lis.activeLinkMovie !== id) {\n        setLis({ ...lis,\n          activeLinkMovie: id\n        });\n        if (!moviesActionRes[lis.moviesLinks[id].data]) props[lis.moviesLinks[id].func](1);\n        setMTType(m => {\n          return { ...m,\n            movies: moviesActionRes[lis.moviesLinks[id].data]\n          };\n        });\n        getMTType({ ...mTType,\n          movies: moviesActionRes[lis.moviesLinks[id].data]\n        });\n      }\n    } else {\n      if (lis.activeLinkTv !== tvId) {\n        setLis({ ...lis,\n          activeLinkTv: tvId\n        });\n        if (!tvActionRes[lis.tvLinks[tvId].data]) props[lis.tvLinks[tvId].func](1);\n        setMTType(m => {\n          return { ...mTType,\n            tv: tvActionRes[lis.tvLinks[tvId].data]\n          };\n        });\n        getMTType({ ...mTType,\n          tv: tvActionRes[lis.tvLinks[tvId].data]\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    setMTType(m => {\n      return { ...m,\n        movies: moviesActionRes[lis.moviesLinks[lis.activeLinkMovie].data]\n      };\n    });\n    getMTType({ ...mTType,\n      movies: moviesActionRes[lis.moviesLinks[lis.activeLinkMovie].data]\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [moviesActionRes[lis.moviesLinks[lis.activeLinkMovie].data]]);\n  useEffect(() => {\n    setMTType({ ...mTType,\n      tv: tvActionRes[lis.tvLinks[lis.activeLinkTv].data]\n    });\n    getMTType({ ...mTType,\n      tv: tvActionRes[lis.tvLinks[lis.activeLinkTv].data]\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tvActionRes[lis.tvLinks[lis.activeLinkTv].data]]);\n  useEffect(() => {\n    if (kind === \"movies\") props[lis.moviesLinks[lis.activeLinkMovie].func](page);else props[lis.tvLinks[lis.activeLinkTv].func](page); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: `type ${version} mb-5 text-capitalize`,\n      children: kind === \"movies\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: lis.moviesLinks.map((ele, ind) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `${ele.id === lis.activeLinkMovie ? \"active\" : \"\"} d-md-inline-block text-pColor`,\n            onClick: () => setActive(ele.id, lis.activeLinkTv, \"movie\"),\n            children: [ele.content, \" \"]\n          }, ind, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: lis.tvLinks.map((ele, ind) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `${ele.id === lis.activeLinkTv ? \"active\" : \"\"} d-md-inline-block text-pColor`,\n            onClick: () => setActive(lis.activeLinkMovie, ele.id, \"tv\"),\n            children: [ele.content, \" \"]\n          }, ind, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(RenderMoviesHeading, \"xQF8AQ0cA+6BEloqZ1pzneKLPuY=\");\n\n_c = RenderMoviesHeading;\n\nconst getState = state => {\n  return {\n    version: state.version,\n    popular: state.movies.popular,\n    comingSoon: state.movies.comingSoon,\n    topRated: state.movies.topRated,\n    tvPopular: state.movies.tvPopular,\n    tvComingSoon: state.movies.tvComingSoon,\n    tvTopRated: state.movies.tvTopRated\n  };\n};\n\nexport default connect(getState, {\n  getPopular,\n  getComingSoon,\n  getTopRated,\n  getTvPopular,\n  getTvComingSoon,\n  getTvTopRated\n})(RenderMoviesHeading);\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderMoviesHeading\");","map":{"version":3,"sources":["D:/block-buster/src/components/renderMovies/RenderMoviesHeading.js"],"names":["useEffect","useState","getPopular","getTvPopular","getComingSoon","getTopRated","getTvComingSoon","getTvTopRated","connect","RenderMoviesHeading","props","getMTType","kind","popular","tvPopular","comingSoon","topRated","tvComingSoon","tvTopRated","version","localStorage","getItem","page","lis","setLis","moviesLinks","id","content","data","func","tvLinks","activeLinkMovie","activeLinkTv","mTType","setMTType","movies","tv","moviesActionRes","tvActionRes","setActive","tvId","m","map","ele","ind","getState","state"],"mappings":"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","sourcesContent":["import {useEffect,useState} from \"react\"\r\nimport {\r\n    getPopular,\r\n    getTvPopular,\r\n    getComingSoon,\r\n    getTopRated,\r\n    getTvComingSoon,\r\n    getTvTopRated \r\n} from \"../../store/actions/moviesAction\"\r\nimport {connect} from \"react-redux\"\r\n\r\nconst RenderMoviesHeading = (props) => {\r\n    const {\r\n        getMTType,\r\n        kind,\r\n        popular,\r\n        tvPopular,\r\n        comingSoon,\r\n        topRated,\r\n        tvComingSoon,\r\n        tvTopRated,\r\n        version = localStorage.getItem(\"version\"),\r\n        page\r\n    } = props\r\n    const [lis,setLis] = useState({\r\n            moviesLinks : [\r\n                {\r\n                    id:0,\r\n                    content:\"#popular\",\r\n                    data:\"popular\",\r\n                    func:\"getPopular\"\r\n                    \r\n                },\r\n                {\r\n                    id:1,\r\n                    \r\n                    content:\"#coming soon\",\r\n                    data:\"comingSoon\",\r\n                    func:\"getComingSoon\"\r\n                },\r\n                {\r\n                    id:2,\r\n                    content:\"#top rated\",\r\n                    data:\"topRated\",\r\n                    func:\"getTopRated\"\r\n                }\r\n            ],\r\n            tvLinks : [\r\n                {\r\n                    id:0,\r\n                    content:\"#popular\",\r\n                    data:\"tvPopular\",\r\n                    func:\"getTvPopular\"\r\n                },\r\n                {\r\n                    id:1,\r\n                    \r\n                    content:\"#coming soon\",\r\n                    data:\"tvComingSoon\",\r\n                    func:\"getTvComingSoon\"\r\n                },\r\n                {\r\n                    id:2,\r\n                    content:\"#top rated\",\r\n                    data:\"tvTopRated\",\r\n                    func:\"getTvTopRated\"\r\n                },\r\n            ],\r\n        activeLinkMovie:0,\r\n        activeLinkTv:0\r\n    })\r\n    const [mTType,setMTType ] = useState({\r\n        movies:popular,\r\n        tv:tvPopular\r\n    })\r\n    let moviesActionRes = {popular,comingSoon,topRated}\r\n    let tvActionRes = {tvPopular,tvComingSoon,tvTopRated}\r\n    const setActive = (id,tvId,kind) => {\r\n        if(kind === \"movie\"){\r\n            if(lis.activeLinkMovie !== id){\r\n                setLis({\r\n                    ...lis,\r\n                    activeLinkMovie:id\r\n                })\r\n                if(!moviesActionRes[lis.moviesLinks[id].data]) props[lis.moviesLinks[id].func](1)\r\n                setMTType(m => {\r\n                    return {\r\n                        ...m,\r\n                        movies:moviesActionRes[lis.moviesLinks[id].data]\r\n                    }\r\n                })\r\n                getMTType({\r\n                    ...mTType,\r\n                    movies:moviesActionRes[lis.moviesLinks[id].data]\r\n                })\r\n            }\r\n        }else{\r\n            if(lis.activeLinkTv !== tvId){\r\n                setLis({\r\n                    ...lis,\r\n                    activeLinkTv:tvId\r\n                })\r\n                if(!tvActionRes[lis.tvLinks[tvId].data]) props[lis.tvLinks[tvId].func](1)\r\n                setMTType(m => {\r\n                    return {\r\n                        ...mTType,\r\n                        tv:tvActionRes[lis.tvLinks[tvId].data]\r\n                    }\r\n                })\r\n                getMTType({\r\n                    ...mTType,\r\n                    tv:tvActionRes[lis.tvLinks[tvId].data]\r\n                })\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setMTType(m => {\r\n            return {\r\n                ...m,\r\n                movies:moviesActionRes[lis.moviesLinks[lis.activeLinkMovie].data]\r\n            }\r\n        })\r\n        getMTType({\r\n            ...mTType,\r\n            movies:moviesActionRes[lis.moviesLinks[lis.activeLinkMovie].data]\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[moviesActionRes[lis.moviesLinks[lis.activeLinkMovie].data]])\r\n    useEffect(() => {\r\n        setMTType({\r\n            ...mTType,\r\n            tv:tvActionRes[lis.tvLinks[lis.activeLinkTv].data]\r\n        })\r\n        getMTType({\r\n            ...mTType,\r\n            tv:tvActionRes[lis.tvLinks[lis.activeLinkTv].data]\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[tvActionRes[lis.tvLinks[lis.activeLinkTv].data]])\r\n    useEffect(() => {\r\n        if(kind === \"movies\") props[lis.moviesLinks[lis.activeLinkMovie].func](page)\r\n        else props[lis.tvLinks[lis.activeLinkTv].func](page)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[page])\r\n    return (\r\n        <>\r\n        <ul className={`type ${version} mb-5 text-capitalize`}>\r\n            {kind === \"movies\" ? (\r\n                <>\r\n                    {lis.moviesLinks.map((ele,ind) => {\r\n                        return <li key={ind} className={`${ele.id === lis.activeLinkMovie ? \"active\" : \"\"} d-md-inline-block text-pColor`} onClick={() => setActive(ele.id,lis.activeLinkTv,\"movie\")} >{ele.content} </li>\r\n                    })}\r\n                </>\r\n            ) : (\r\n                <>\r\n                    {lis.tvLinks.map((ele,ind) => {\r\n                        return <li key={ind} className={`${ele.id === lis.activeLinkTv ? \"active\" : \"\"} d-md-inline-block text-pColor`} onClick={() => setActive(lis.activeLinkMovie,ele.id,\"tv\")} >{ele.content} </li>\r\n                    })}\r\n                </> \r\n            )}\r\n        </ul>\r\n        </>\r\n    )\r\n}\r\nconst getState = (state) => {\r\n    return {\r\n        version:state.version,\r\n        popular:state.movies.popular,\r\n        comingSoon:state.movies.comingSoon,\r\n        topRated:state.movies.topRated,\r\n        tvPopular:state.movies.tvPopular,\r\n        tvComingSoon:state.movies.tvComingSoon,\r\n        tvTopRated:state.movies.tvTopRated\r\n    }\r\n}\r\n\r\nexport default connect(getState,{\r\n    getPopular,\r\n    getComingSoon,\r\n    getTopRated,\r\n    getTvPopular,\r\n    getTvComingSoon,\r\n    getTvTopRated\r\n})(RenderMoviesHeading)"]},"metadata":{},"sourceType":"module"}