{"ast":null,"code":"var _jsxFileName = \"D:\\\\block-buster\\\\src\\\\components\\\\parts\\\\SearchResult.js\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getSingleTrailer, getTv, getMovie } from \"../../store/actions/moviesAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchResult = ({\n  results,\n  focussed,\n  getSingleTrailer,\n  getTv,\n  getMovie\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results rela\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"bg-nav text-capitalize\",\n      children: results && results.map(result => {\n        const {\n          title,\n          name,\n          backdrop_path,\n          id,\n          media_type\n        } = result;\n        const currentMedia = media_type === \"tv\" ? \"tv\" : \"movies\";\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              getMovie(null);\n              getTv(null);\n              getSingleTrailer(null);\n            },\n            className: \"d-flex  p-2  flex-row align-items-center\",\n            to: `/watch/${currentMedia}/${id}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"img mr-4\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"img-fluid\",\n                src: !backdrop_path ? \"\" : `https://image.tmdb.org/t/p/w200${backdrop_path}`,\n                alt: \"poster\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"m-0\",\n              children: [title || name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 29\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SearchResult;\nexport default connect(null, {\n  getSingleTrailer,\n  getTv,\n  getMovie\n})(SearchResult);\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["D:/block-buster/src/components/parts/SearchResult.js"],"names":["Link","connect","getSingleTrailer","getTv","getMovie","SearchResult","results","focussed","map","result","title","name","backdrop_path","id","media_type","currentMedia"],"mappings":";AAAA,SAAQA,IAAR,QAAmB,kBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,EAAyBC,KAAzB,EAA+BC,QAA/B,QAA8C,kCAA9C;;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,OAAD;AAASC,EAAAA,QAAT;AAAkBL,EAAAA,gBAAlB;AAAmCC,EAAAA,KAAnC;AAAyCC,EAAAA;AAAzC,CAAD,KAAwD;AACzE,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,wBAAd;AAAA,gBACKE,OAAO,IAAIA,OAAO,CAACE,GAAR,CAAYC,MAAM,IAAI;AAC9B,cAAM;AAACC,UAAAA,KAAD;AAAOC,UAAAA,IAAP;AAAYC,UAAAA,aAAZ;AAA0BC,UAAAA,EAA1B;AAA6BC,UAAAA;AAA7B,YAA2CL,MAAjD;AACA,cAAMM,YAAY,GAAGD,UAAU,KAAK,IAAf,GAAsB,IAAtB,GAA6B,QAAlD;AACA,4BACI;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,OAAO,EAAE,MAAM;AACjBV,cAAAA,QAAQ,CAAC,IAAD,CAAR;AACAD,cAAAA,KAAK,CAAC,IAAD,CAAL;AACAD,cAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,aAJD;AAIG,YAAA,SAAS,EAAC,0CAJb;AAIwD,YAAA,EAAE,EAAG,UAASa,YAAa,IAAGF,EAAG,EAJzF;AAAA,oCAKI;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,WAAf;AAA2B,gBAAA,GAAG,EAAE,CAACD,aAAD,GAAiB,EAAjB,GAAuB,kCAAiCA,aAAc,EAAtG;AAAyG,gBAAA,GAAG,EAAC;AAA7G;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBALJ,eAQI;AAAG,cAAA,SAAS,EAAC,KAAb;AAAA,yBAAoBF,KAAK,IAAIC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAASE,EAAT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAeH,OAlBW;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA3BD;;KAAMR,Y;AA6BN,eAAeJ,OAAO,CAAC,IAAD,EAAM;AACxBC,EAAAA,gBADwB;AAExBC,EAAAA,KAFwB;AAGxBC,EAAAA;AAHwB,CAAN,CAAP,CAIZC,YAJY,CAAf","sourcesContent":["import {Link} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport {getSingleTrailer,getTv,getMovie} from \"../../store/actions/moviesAction\"\r\nconst SearchResult = ({results,focussed,getSingleTrailer,getTv,getMovie}) => {\r\n    return (\r\n        <div className=\"results rela\">\r\n            <ul className=\"bg-nav text-capitalize\">\r\n                {results && results.map(result => {\r\n                    const {title,name,backdrop_path,id,media_type} = result\r\n                    const currentMedia = media_type === \"tv\" ? \"tv\" : \"movies\"\r\n                    return (\r\n                        <li key={id}>\r\n                            <Link onClick={() => {\r\n                                getMovie(null)\r\n                                getTv(null)\r\n                                getSingleTrailer(null) \r\n                            }} className=\"d-flex  p-2  flex-row align-items-center\" to={`/watch/${currentMedia}/${id}`} >\r\n                                <div className=\"img mr-4\">\r\n                                    <img className=\"img-fluid\" src={!backdrop_path ? \"\" : `https://image.tmdb.org/t/p/w200${backdrop_path}`} alt=\"poster\" />\r\n                                </div>\r\n                                <p className=\"m-0\">{title || name} </p>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n\r\n                })}\r\n                \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null,{\r\n    getSingleTrailer,\r\n    getTv,\r\n    getMovie\r\n})(SearchResult)"]},"metadata":{},"sourceType":"module"}