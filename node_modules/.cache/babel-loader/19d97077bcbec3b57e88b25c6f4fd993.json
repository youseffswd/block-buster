{"ast":null,"code":"var _jsxFileName = \"D:\\\\block-buster\\\\src\\\\components\\\\renderMovies\\\\SingleMovieCard.js\";\nimport { IoIosStar } from \"react-icons/io\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getSingleTrailer, getMovie, getTv } from \"../../store/actions/moviesAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SingleMovieCard = ({\n  movie,\n  version = localStorage.getItem(\"version\"),\n  kind,\n  getSingleTrailer,\n  getMovie,\n  getTv\n}) => {\n  const {\n    title,\n    poster_path,\n    vote_average,\n    id,\n    name\n  } = movie;\n  const posterPath = \"https://image.tmdb.org/t/p/w200\";\n  return /*#__PURE__*/_jsxDEV(Link, {\n    onClick: () => {\n      getSingleTrailer(null);\n      getTv(null);\n      getMovie(null);\n    },\n    to: `/block-buster/watch/${kind}/${id}`,\n    className: \"movieCard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img  mb-2 text-center\",\n      children: poster_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"img-fluid\",\n        src: `${posterPath}${poster_path}`,\n        alt: \"poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-auto\",\n        children: \"no poster available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${version} info  `,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \" mb-2 \",\n        children: [title || name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: ` d-flex justify-content-center align-items-center mb-0 `,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(IoIosStar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"big\", {\n          children: vote_average\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"/10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SingleMovieCard;\n\nconst getState = state => {\n  return {\n    version: state.version\n  };\n};\n\nexport default connect(getState, {\n  getSingleTrailer,\n  getMovie,\n  getTv\n})(SingleMovieCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleMovieCard\");","map":{"version":3,"sources":["D:/block-buster/src/components/renderMovies/SingleMovieCard.js"],"names":["IoIosStar","Link","connect","getSingleTrailer","getMovie","getTv","SingleMovieCard","movie","version","localStorage","getItem","kind","title","poster_path","vote_average","id","name","posterPath","getState","state"],"mappings":";AAAA,SAASA,SAAT,QAA0B,gBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACIC,gBADJ,EAEIC,QAFJ,EAGIC,KAHJ,QAIO,kCAJP;;;AAKA,MAAMC,eAAe,GAAG,CAAC;AACrBC,EAAAA,KADqB;AAErBC,EAAAA,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAFW;AAGrBC,EAAAA,IAHqB;AAIrBR,EAAAA,gBAJqB;AAKrBC,EAAAA,QALqB;AAMrBC,EAAAA;AANqB,CAAD,KAOlB;AACF,QAAM;AAAEO,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA,YAAtB;AAAoCC,IAAAA,EAApC;AAAwCC,IAAAA;AAAxC,MAAiDT,KAAvD;AACA,QAAMU,UAAU,GAAG,iCAAnB;AACA,sBACI,QAAC,IAAD;AACI,IAAA,OAAO,EAAE,MAAM;AACXd,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,MAAAA,KAAK,CAAC,IAAD,CAAL;AACAD,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KALL;AAMI,IAAA,EAAE,EAAG,uBAAsBO,IAAK,IAAGI,EAAG,EAN1C;AAOI,IAAA,SAAS,EAAC,WAPd;AAAA,4BAQI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,gBACKF,WAAW,gBACR;AACI,QAAA,SAAS,EAAC,WADd;AAEI,QAAA,GAAG,EAAG,GAAEI,UAAW,GAAEJ,WAAY,EAFrC;AAGI,QAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,cADQ,gBAOR;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,YARJ,eAmBI;AAAK,MAAA,SAAS,EAAG,GAAEL,OAAQ,SAA3B;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA,mBAAwBI,KAAK,IAAII,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,SAAS,EAAG,yDADhB;AAAA,gCAEI;AAAA,iCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAA,oBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH,CA3CD;;KAAMR,e;;AA6CN,MAAMY,QAAQ,GAAGC,KAAK,IAAI;AACtB,SAAO;AACHX,IAAAA,OAAO,EAAEW,KAAK,CAACX;AADZ,GAAP;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAACgB,QAAD,EAAW;AAC7Bf,EAAAA,gBAD6B;AAE7BC,EAAAA,QAF6B;AAG7BC,EAAAA;AAH6B,CAAX,CAAP,CAIZC,eAJY,CAAf","sourcesContent":["import { IoIosStar } from \"react-icons/io\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    getSingleTrailer,\r\n    getMovie,\r\n    getTv,\r\n} from \"../../store/actions/moviesAction\";\r\nconst SingleMovieCard = ({\r\n    movie,\r\n    version = localStorage.getItem(\"version\"),\r\n    kind,\r\n    getSingleTrailer,\r\n    getMovie,\r\n    getTv,\r\n}) => {\r\n    const { title, poster_path, vote_average, id, name } = movie;\r\n    const posterPath = \"https://image.tmdb.org/t/p/w200\";\r\n    return (\r\n        <Link\r\n            onClick={() => {\r\n                getSingleTrailer(null);\r\n                getTv(null);\r\n                getMovie(null);\r\n            }}\r\n            to={`/block-buster/watch/${kind}/${id}`}\r\n            className=\"movieCard\">\r\n            <div className=\"img  mb-2 text-center\">\r\n                {poster_path ? (\r\n                    <img\r\n                        className=\"img-fluid\"\r\n                        src={`${posterPath}${poster_path}`}\r\n                        alt=\"poster\"\r\n                    />\r\n                ) : (\r\n                    <div className=\"mx-auto\">no poster available</div>\r\n                )}\r\n            </div>\r\n            <div className={`${version} info  `}>\r\n                <h4 className=\" mb-2 \">{title || name} </h4>\r\n                <div\r\n                    className={` d-flex justify-content-center align-items-center mb-0 `}>\r\n                    <span>\r\n                        <IoIosStar />\r\n                    </span>\r\n                    <big>{vote_average}</big>\r\n                    <small>/10</small>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n};\r\n\r\nconst getState = state => {\r\n    return {\r\n        version: state.version,\r\n    };\r\n};\r\n\r\nexport default connect(getState, {\r\n    getSingleTrailer,\r\n    getMovie,\r\n    getTv,\r\n})(SingleMovieCard);\r\n"]},"metadata":{},"sourceType":"module"}