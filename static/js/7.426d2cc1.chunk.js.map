{"version":3,"sources":["store/actions/moviesAction.js","components/layout/NavBar.js","store/actions/chooseVersion.js","components/parts/SearchResult.js","components/layout/SearchBar.js","store/actions/handleInputAction.js","components/layout/Header.js","pages/Movie.js"],"names":["getAutoCompleteSearch","q","page","dispatch","a","length","axios","get","res","data","type","payload","getSearch","getNowPlaying","getPopular","getComingSoon","getTopRated","getTvPopular","getTvComingSoon","getTvTopRated","getTrailer","path","getMovie","getTv","getSingleTrailer","connect","chooseVersion","version","localStorage","setItem","navClass","useState","active","setActive","input","useRef","handleClick","useEffect","getItem","current","checked","className","to","src","logo","alt","onClick","exact","activeClassName","id","onChange","e","target","ref","results","focussed","map","result","title","name","backdrop_path","currentMedia","media_type","state","autoCompleteSearchResults","movies","value","handleInput","setFocus","setResults","history","useHistory","slice","autoComplete","onSubmit","preventDefault","blur","push","onFocus","onBlur","setTimeout","clearTimeout","required","placeholder","Header","props","headerClass","children","searchClass","useInView","inView","completeShared","Container","style","backgroundImage","headerImg","movie","tv","trailer","singleTrailer","match","params","currentItem","currentTrailer","find","poster_path","overview","vote_average","release_date","first_air_date","production_companies","fontSize","xs","width","marginBottom","height","key","frameBorder","allow","allowFullScreen","lg","company","logo_path","origin_country"],"mappings":"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","file":"static/js/7.426d2cc1.chunk.js","sourcesContent":["\r\nimport axios from \"axios\"\r\n\r\nexport const getAutoCompleteSearch = (q,page) => {\r\n    return async (dispatch) => {\r\n        const res = q.length === 0 ? null : await axios.get(`https://api.themoviedb.org/3/search/multi?api_key=af64c5c103f265313a6fa2368d35c51a&query=${q}&page=${page}`)\r\n        const data = res && res.data\r\n\r\n        dispatch({type:\"GET_AUTO_COMPLETE_SEARCH\",payload:data})\r\n    } \r\n}\r\nexport const getSearch = (q,page) => {\r\n    return async (dispatch) => {\r\n        const res = q.length === 0 ? null : await axios.get(`https://api.themoviedb.org/3/search/multi?api_key=af64c5c103f265313a6fa2368d35c51a&query=${q}&page=${page}`)\r\n        const data = res && res.data\r\n\r\n        dispatch({type:\"GET_SEARCH\",payload:data})\r\n    } \r\n}\r\n\r\nexport const getNowPlaying = (page) => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/now_playing?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US&page=${page}`)\r\n        const data =  res.data\r\n        dispatch({type:\"GET_NOW_PLAYING\",payload:data})\r\n    } \r\n}\r\n\r\nexport const getPopular = (page) => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US&page=${page}`)\r\n        const data = res.data\r\n        dispatch({type:\"GET_POPULAR\",payload:data})\r\n    } \r\n}\r\nexport const getComingSoon = (page) => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/upcoming?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US&page=${page}`)\r\n        const data = res.data\r\n        dispatch({type:\"GET_COMING_SOON\",payload:data})\r\n    } \r\n}\r\nexport const getTopRated = (page) => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US&page=${page}`)\r\n        const data = res.data\r\n        dispatch({type:\"GET_TOP_RATED\",payload:data})\r\n    } \r\n}\r\n\r\nexport const getTvPopular = page => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/tv/popular?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US&page=${page}`)\r\n        const data = res.data\r\n\r\n        dispatch({type:\"GET_TV_POPULAR\",payload:data})\r\n    } \r\n}\r\nexport const getTvComingSoon = (page) => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/tv/on_the_air?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US&page=${page}`)\r\n        const data = res.data\r\n        dispatch({type:\"GET_TV_COMING_SOON\",payload:data})\r\n    } \r\n}\r\nexport const getTvTopRated = (page) => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/tv/top_rated?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US&page=${page}`)\r\n        const data = res.data\r\n        dispatch({type:\"GET_TV_TOP_RATED\",payload:data})\r\n    } \r\n}\r\nexport const getTrailer = (path) => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3${path}?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US`)\r\n        const data = res.data\r\n\r\n        dispatch({type:\"GET_TRAILER\",payload:data})\r\n    } \r\n}\r\nexport const getMovie = (path) => {\r\n    return async (dispatch) => {\r\n        if(!path){\r\n            dispatch({type:\"GET_MOVIE\",payload:path})\r\n        }\r\n        else{\r\n            const res = await axios.get(`https://api.themoviedb.org/3/${path}?api_key=af64c5c103f265313a6fa2368d35c51a`)\r\n            const data = res.data\r\n            dispatch({type:\"GET_MOVIE\",payload:data})\r\n        }\r\n    } \r\n}\r\nexport const getTv = (path) => {\r\n    return async (dispatch) => {\r\n        if(!path){\r\n            dispatch({type:\"GET_TV\",payload:path})\r\n        }\r\n        else{\r\n            const res = await axios.get(`https://api.themoviedb.org/3/${path}?api_key=af64c5c103f265313a6fa2368d35c51a`)\r\n            const data = res.data\r\n            dispatch({type:\"GET_TV\",payload:data})\r\n        }\r\n    } \r\n}\r\nexport const getSingleTrailer = (path) => {\r\n    return async (dispatch) => {\r\n        if(!path){\r\n            dispatch({type:\"GET_SINGLE_TRAILER\",payload:path})\r\n        }\r\n        else{\r\n            const res = await axios.get(`https://api.themoviedb.org/3${path}/videos?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US`)\r\n            const data = res.data\r\n\r\n            dispatch({type:\"GET_SINGLE_TRAILER\",payload:data})\r\n        }\r\n    } \r\n}","import { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { logo } from \"../../imgs/imgs\";\r\nimport { chooseVersion } from \"../../store/actions/chooseVersion\";\r\nconst NavBar = ({ navClass, chooseVersion }) => {\r\n    const [active, setActive] = useState(false);\r\n    const input = useRef(null);\r\n    const handleClick = () => {\r\n        setActive(false);\r\n    };\r\n    const changeHandler = e => {\r\n        e.target.checked ? chooseVersion(\"light\") : chooseVersion(\"dark\");\r\n    };\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"version\")) {\r\n            chooseVersion(\"dark\");\r\n        } else {\r\n            chooseVersion(localStorage.getItem(\"version\"));\r\n            input.current.checked = localStorage.getItem(\"version\") === \"light\";\r\n        }\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <nav\r\n            className={`${navClass} px-3 px-sm-4 px-md-5 py-2 py-sm-3 py-lg-4 d-flex align-items-center flex-wrap flex-lg-nowrap`}>\r\n            <NavLink to=\"/home\" className=\"logo\">\r\n                <img className=\"img-fluid\" src={logo} alt=\"logo\" />\r\n            </NavLink>\r\n\r\n            <div\r\n                onClick={() => setActive(!active)}\r\n                className=\"icon d-lg-none text-white flex-content-center flex-wrap\">\r\n                <div className=\"father\">\r\n                    <span className={active ? \"active1\" : \"\"}></span>\r\n                    <span className={active ? \"active2\" : \"\"}></span>\r\n                    <span className={active ? \"active3\" : \"\"}></span>\r\n                </div>\r\n            </div>\r\n            <div className={`${active ? \"active\" : \"\"} links-container `}>\r\n                <div className={`links`}>\r\n                    <ul>\r\n                        <li onClick={handleClick}>\r\n                            <NavLink exact to=\"/\" activeClassName=\"active\">\r\n                                Home\r\n                            </NavLink>\r\n                        </li>\r\n                        <li onClick={handleClick}>\r\n                            <NavLink\r\n                                to=\"/watch/movies\"\r\n                                activeClassName=\"active\">\r\n                                Movies\r\n                            </NavLink>\r\n                        </li>\r\n                        <li onClick={handleClick}>\r\n                            <NavLink to=\"/watch/tv\" activeClassName=\"active\">\r\n                                Tv\r\n                            </NavLink>\r\n                        </li>\r\n                        <li onClick={handleClick}>\r\n                            <NavLink to=\"/news\" activeClassName=\"active\">\r\n                                News\r\n                            </NavLink>\r\n                        </li>\r\n                        <li onClick={handleClick}>\r\n                            <NavLink to=\"/signup\" activeClassName=\"active\">\r\n                                Sign Up\r\n                            </NavLink>\r\n                        </li>\r\n                        <li onClick={handleClick}>\r\n                            <NavLink to=\"/signin\" activeClassName=\"active\">\r\n                                Sign In\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                    <ul>\r\n                        <li>\r\n                            <NavLink\r\n                                className=\"profile bg-primary text-uppercase\"\r\n                                to=\"/profile\">\r\n                                YS\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <div className=\"toggle-button-cover\">\r\n                                <div className=\"button-cover\">\r\n                                    <div className=\"button r\" id=\"button-3\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            onChange={changeHandler}\r\n                                            ref={input}\r\n                                            className=\"checkbox\"\r\n                                        />\r\n\r\n                                        <div className=\"knobs\"></div>\r\n                                        <div className=\"layer\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default connect(null, { chooseVersion })(NavBar);\r\n","export const chooseVersion = version => {\r\n    return dispatch => {\r\n        localStorage.setItem(\"version\", version);\r\n        dispatch({ type: \"CHOOSE_VERSION\", payload: version });\r\n    };\r\n};\r\n","import {Link} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport {getSingleTrailer,getTv,getMovie} from \"../../store/actions/moviesAction\"\r\nconst SearchResult = ({results,focussed,getSingleTrailer,getTv,getMovie}) => {\r\n    return (\r\n        <div className=\"results rela\">\r\n            <ul className=\"bg-nav text-capitalize\">\r\n                {results && results.map(result => {\r\n                    const {title,name,backdrop_path,id,media_type} = result\r\n                    const currentMedia = media_type === \"tv\" ? \"tv\" : \"movies\"\r\n                    return (\r\n                        <li key={id}>\r\n                            <Link onClick={() => {\r\n                                getMovie(null)\r\n                                getTv(null)\r\n                                getSingleTrailer(null) \r\n                            }} className=\"d-flex  p-2  flex-row align-items-center\" to={`/watch/${currentMedia}/${id}`} >\r\n                                <div className=\"img mr-4\">\r\n                                    <img className=\"img-fluid\" src={!backdrop_path ? \"\" : `https://image.tmdb.org/t/p/w200${backdrop_path}`} alt=\"poster\" />\r\n                                </div>\r\n                                <p className=\"m-0\">{title || name} </p>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n\r\n                })}\r\n                \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null,{\r\n    getSingleTrailer,\r\n    getTv,\r\n    getMovie\r\n})(SearchResult)","import { useState, useEffect, useRef } from \"react\";\r\nimport { IoMdSearch } from \"react-icons/io\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    getSearch,\r\n    getAutoCompleteSearch,\r\n} from \"../../store/actions/moviesAction\";\r\nimport { handleInput } from \"../../store/actions/handleInputAction\";\r\nimport { connect } from \"react-redux\";\r\nimport SearchResult from \"../parts/SearchResult\";\r\nconst SearchBar = ({\r\n    className,\r\n    getSearch,\r\n    value,\r\n    handleInput,\r\n    autoCompleteSearchResults,\r\n    getAutoCompleteSearch,\r\n}) => {\r\n    const [focussed, setFocus] = useState(false);\r\n    const [results, setResults] = useState(null);\r\n    const input = useRef(null);\r\n    const history = useHistory();\r\n    const handleChange = e => {\r\n        handleInput(e.target.value);\r\n        localStorage.setItem(\"searchValue\", e.target.value);\r\n        clearTimeout();\r\n        setTimeout(() => {\r\n            getAutoCompleteSearch(e.target.value, 1);\r\n        }, 500);\r\n    };\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        getSearch(value, 1);\r\n        input.current.blur();\r\n        history.push(\"/search\");\r\n    };\r\n    useEffect(() => {\r\n        if (focussed)\r\n            setResults(\r\n                autoCompleteSearchResults &&\r\n                    autoCompleteSearchResults.results.slice(0, 5),\r\n            );\r\n        return () => {\r\n            if (focussed)\r\n                setResults(\r\n                    autoCompleteSearchResults &&\r\n                        autoCompleteSearchResults.results.slice(0, 5),\r\n                );\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [autoCompleteSearchResults]);\r\n    return (\r\n        <>\r\n            <form\r\n                className=\"SearchBarForm\"\r\n                autoComplete={\"off\"}\r\n                onSubmit={handleSubmit}>\r\n                <div\r\n                    className={`${className} rela input-group search-bar mt-3`}>\r\n                    <div className=\"input-group-prepend\"></div>\r\n                    <input\r\n                        ref={input}\r\n                        onFocus={() => {\r\n                            setResults(\r\n                                autoCompleteSearchResults &&\r\n                                    autoCompleteSearchResults.results.slice(\r\n                                        0,\r\n                                        5,\r\n                                    ),\r\n                            );\r\n                            setFocus(true);\r\n                        }}\r\n                        onBlur={() => {\r\n                            setTimeout(() => {\r\n                                setResults(null);\r\n                                setFocus(false);\r\n                            }, 300);\r\n                        }}\r\n                        type=\"text\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        required\r\n                        className=\"form-control search bg-nav\"\r\n                        id=\"inlineFormInputGroupUsername\"\r\n                        placeholder=\"Search...\"\r\n                    />\r\n                    <button type=\"submit\">\r\n                        <IoMdSearch />{\" \"}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n            <SearchResult focussed={focussed} results={results} />\r\n        </>\r\n    );\r\n};\r\nconst getState = state => {\r\n    return {\r\n        autoCompleteSearchResults: state.movies.autoCompleteSearchResults,\r\n        value: state.input,\r\n    };\r\n};\r\n\r\nexport default connect(getState, {\r\n    getSearch,\r\n    getAutoCompleteSearch,\r\n    handleInput,\r\n})(SearchBar);\r\n","export const handleInput = value => {\r\n    return {\r\n        type: \"HANDLE_INPUT\",\r\n        payload: value,\r\n    };\r\n};\r\n","import { headerImg } from \"../../imgs/imgs\";\r\nimport NavBar from \"./NavBar\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nconst Header = props => {\r\n    const {\r\n        headerClass,\r\n        children,\r\n\r\n        searchClass = \"\",\r\n    } = props;\r\n    const { ref, inView } = useInView({});\r\n\r\n    const completeShared = (\r\n        <>\r\n            <NavBar navClass={`${inView ? \"\" : \"fixed\"}`} />\r\n            <Container className={searchClass}>\r\n                <SearchBar />\r\n            </Container>\r\n        </>\r\n    );\r\n    return (\r\n        <header\r\n            ref={ref}\r\n            className={`${headerClass} `}\r\n            style={{ backgroundImage: `url(${headerImg})` }}>\r\n            {completeShared}\r\n\r\n            {children}\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getMovie, getTv } from \"../store/actions/moviesAction\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../components/parts/Spinner\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Header from \"../components/layout/Header\";\r\nimport { IoIosPlay, IoIosStar } from \"react-icons/io\";\r\nimport { FaTicketAlt } from \"react-icons/fa\";\r\nimport { getSingleTrailer } from \"../store/actions/moviesAction\";\r\nconst Movie = props => {\r\n    const {\r\n        movies,\r\n        tv,\r\n        getMovie,\r\n        getTv,\r\n        match,\r\n        trailer,\r\n        getSingleTrailer,\r\n        version = localStorage.getItem(\"version\"),\r\n    } = props;\r\n    const { type, id } = match.params;\r\n    const [currentItem, setItem] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (type === \"movies\") {\r\n            getMovie(\"movie/\" + id);\r\n            setItem(movies);\r\n        } else {\r\n            getTv(\"tv/\" + id);\r\n            setItem(tv);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [id]);\r\n    useEffect(() => {\r\n        setItem(props[type]);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props[type]]);\r\n    let currentTrailer =\r\n        trailer && trailer.results.find(result => result.type === \"Trailer\");\r\n    if (currentItem) {\r\n        const {\r\n            poster_path,\r\n            overview,\r\n            title,\r\n            name,\r\n            vote_average,\r\n            release_date,\r\n            first_air_date,\r\n            production_companies,\r\n        } = currentItem;\r\n        return (\r\n            <div className={`singleMovieOrTv  bg-${version}`}>\r\n                <Header headerClass=\"half\">\r\n                    <h2 className=\"mt-5 mb-3 text-center text-white font-weight-bold\">\r\n                        {title || name}\r\n                        <small\r\n                            style={{ fontSize: \"18px\" }}\r\n                            className=\"ml-3 text-pColor\">\r\n                            {release_date || first_air_date}{\" \"}\r\n                        </small>\r\n                    </h2>\r\n                    <div\r\n                        className={` rate d-flex justify-content-center align-items-center mb-0 `}>\r\n                        <span>\r\n                            <IoIosStar />\r\n                        </span>\r\n                        <big>{vote_average}</big>\r\n                        <small>/10</small>\r\n                    </div>\r\n                </Header>\r\n                <Container className=\"py-5\">\r\n                    <Row className=\"py-5\">\r\n                        <Col xs=\"12\">\r\n                            {!currentTrailer ? (\r\n                                <div></div>\r\n                            ) : (\r\n                                <iframe\r\n                                    title=\"trailer\"\r\n                                    style={{\r\n                                        width: \"100%\",\r\n                                        marginBottom: \"30px\",\r\n                                    }}\r\n                                    height=\"450\"\r\n                                    src={`https://www.youtube.com/embed/${currentTrailer.key}`}\r\n                                    frameBorder=\"0\"\r\n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                    allowFullScreen></iframe>\r\n                            )}\r\n                        </Col>\r\n                        <Col className=\"mb-5 mb-lg-0\" xs=\"12\" lg=\"4\">\r\n                            <div className=\"singleMovieCard px-3 \">\r\n                                <div className=\"img text-center\">\r\n                                    <img\r\n                                        className=\"img-fluid\"\r\n                                        src={`https://image.tmdb.org/t/p/w500${poster_path}`}\r\n                                        alt=\"poster\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"content p-4 bg-dark\">\r\n                                    <button\r\n                                        onClick={() =>\r\n                                            getSingleTrailer(\r\n                                                `/${\r\n                                                    type === \"movies\"\r\n                                                        ? \"movie\"\r\n                                                        : \"tv\"\r\n                                                }/${id}`,\r\n                                            )\r\n                                        }\r\n                                        className=\"mb-3 py-2\">\r\n                                        <span>\r\n                                            <IoIosPlay />{\" \"}\r\n                                        </span>{\" \"}\r\n                                        <span>Watch Trailer</span>\r\n                                    </button>\r\n                                    <button className=\" py-2\">\r\n                                        <span>\r\n                                            <FaTicketAlt />{\" \"}\r\n                                        </span>{\" \"}\r\n                                        <span>buy ticket</span>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n\r\n                        <Col\r\n                            xs=\"12\"\r\n                            lg=\"8\"\r\n                            className={`contentInfo ${version}`}>\r\n                            <div className=\"overview mb-4\">\r\n                                <h4 className=\"text-white font-weight-bold title\">\r\n                                    Overview\r\n                                </h4>\r\n                                <p className=\"text-pColor\">{overview} </p>\r\n                            </div>\r\n                            <div className=\"companies\">\r\n                                <h4 className=\"text-white font-weight-bold mb-4 title\">\r\n                                    Companies\r\n                                </h4>\r\n                                <Row>\r\n                                    {production_companies &&\r\n                                        production_companies.map(company => {\r\n                                            return (\r\n                                                <Col\r\n                                                    className=\"d-flex align-items-center flex-row mb-3\"\r\n                                                    xs=\"12\"\r\n                                                    key={company.id}>\r\n                                                    <div className=\"img mr-4\">\r\n                                                        <img\r\n                                                            src={\r\n                                                                !company.logo_path\r\n                                                                    ? \"\"\r\n                                                                    : \"https://image.tmdb.org/t/p/w200\" +\r\n                                                                      company.logo_path\r\n                                                            }\r\n                                                            alt=\"logo\"\r\n                                                            className=\"img-fluid\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <h4 className=\"m-0 name\">\r\n                                                        {company.name} \"\r\n                                                        <span>\r\n                                                            {\r\n                                                                company.origin_country\r\n                                                            }\r\n                                                        </span>\r\n                                                        \"\r\n                                                    </h4>\r\n                                                </Col>\r\n                                            );\r\n                                        })}\r\n                                </Row>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n    return <Spinner />;\r\n};\r\n\r\nconst getState = state => {\r\n    return {\r\n        movies: state.movies.movie,\r\n        tv: state.movies.tv,\r\n        version: state.version,\r\n        trailer: state.movies.singleTrailer,\r\n    };\r\n};\r\n\r\nexport default connect(getState, {\r\n    getMovie,\r\n    getTv,\r\n    getSingleTrailer,\r\n})(Movie);\r\n"],"sourceRoot":""}