{"version":3,"sources":["store/actions/moviesAction.js","components/layout/NavBar.js","store/actions/chooseVersion.js","components/parts/SearchResult.js","components/layout/SearchBar.js","store/actions/handleInputAction.js","components/layout/Header.js","components/renderMovies/SingleMovieCard.js","components/parts/GetMorePages.js","components/renderMovies/MovieCardLoading.js","components/renderMovies/RenderSlider.js","components/renderMovies/RenderMoviesHeading.js","components/renderMovies/RenderMovies.js"],"names":["getAutoCompleteSearch","q","page","dispatch","a","length","axios","get","res","data","type","payload","getSearch","getNowPlaying","getPopular","getComingSoon","getTopRated","getTvPopular","getTvComingSoon","getTvTopRated","getTrailer","path","getMovie","getTv","getSingleTrailer","connect","chooseVersion","version","localStorage","setItem","navClass","useState","active","setActive","input","useRef","handleClick","useEffect","getItem","current","checked","className","to","src","logo","alt","onClick","exact","activeClassName","id","onChange","e","target","ref","results","focussed","map","result","title","name","backdrop_path","currentMedia","media_type","state","autoCompleteSearchResults","movies","value","handleInput","setFocus","setResults","history","useHistory","slice","autoComplete","onSubmit","preventDefault","blur","push","onFocus","onBlur","setTimeout","clearTimeout","required","placeholder","Header","props","headerClass","children","searchClass","useInView","inView","completeShared","Container","style","backgroundImage","headerImg","movie","kind","poster_path","vote_average","GetMorePages","startingPage","total","getPage","setPage","direction","amount","MovieCardLoading","itemsInSLider","arg1","arg2","arg3","arg4","arg5","window","innerWidth","loop","trailer","height","innerHeight","width","setDimensions","addEventListener","activeMovie","activeTrailer","setActiveTrailer","old","navigation","spaceBetween","slidesPerView","centeredSlides","ind","SingleMovieCard","Row","Col","xs","md","lg","popular","comingSoon","topRated","tvPopular","tvComingSoon","tvTopRated","getMTType","moviesLinks","content","func","tvLinks","activeLinkMovie","activeLinkTv","lis","setLis","tv","mTType","setMTType","moviesActionRes","tvActionRes","tvId","m","ele","slider","obj","RenderSlider","item","currentPage","total_pages"],"mappings":"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","file":"static/js/1.e12100c9.chunk.js","sourcesContent":["\r\nimport axios from \"axios\"\r\n\r\nexport const getAutoCompleteSearch = (q,page) => {\r\n    return async (dispatch) => {\r\n        const res = q.length === 0 ? null : await axios.get(`https://api.themoviedb.org/3/search/multi?api_key=af64c5c103f265313a6fa2368d35c51a&query=${q}&page=${page}`)\r\n        const data = res && res.data\r\n\r\n        dispatch({type:\"GET_AUTO_COMPLETE_SEARCH\",payload:data})\r\n    } \r\n}\r\nexport const getSearch = (q,page) => {\r\n    return async (dispatch) => {\r\n        const res = q.length === 0 ? null : await axios.get(`https://api.themoviedb.org/3/search/multi?api_key=af64c5c103f265313a6fa2368d35c51a&query=${q}&page=${page}`)\r\n        const data = res && res.data\r\n\r\n        dispatch({type:\"GET_SEARCH\",payload:data})\r\n    } \r\n}\r\n\r\nexport const getNowPlaying = (page) => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/now_playing?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US&page=${page}`)\r\n        const data =  res.data\r\n        dispatch({type:\"GET_NOW_PLAYING\",payload:data})\r\n    } \r\n}\r\n\r\nexport const getPopular = (page) => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US&page=${page}`)\r\n        const data = res.data\r\n        dispatch({type:\"GET_POPULAR\",payload:data})\r\n    } \r\n}\r\nexport const getComingSoon = (page) => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/upcoming?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US&page=${page}`)\r\n        const data = res.data\r\n        dispatch({type:\"GET_COMING_SOON\",payload:data})\r\n    } \r\n}\r\nexport const getTopRated = (page) => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US&page=${page}`)\r\n        const data = res.data\r\n        dispatch({type:\"GET_TOP_RATED\",payload:data})\r\n    } \r\n}\r\n\r\nexport const getTvPopular = page => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/tv/popular?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US&page=${page}`)\r\n        const data = res.data\r\n\r\n        dispatch({type:\"GET_TV_POPULAR\",payload:data})\r\n    } \r\n}\r\nexport const getTvComingSoon = (page) => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/tv/on_the_air?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US&page=${page}`)\r\n        const data = res.data\r\n        dispatch({type:\"GET_TV_COMING_SOON\",payload:data})\r\n    } \r\n}\r\nexport const getTvTopRated = (page) => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3/tv/top_rated?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US&page=${page}`)\r\n        const data = res.data\r\n        dispatch({type:\"GET_TV_TOP_RATED\",payload:data})\r\n    } \r\n}\r\nexport const getTrailer = (path) => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`https://api.themoviedb.org/3${path}?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US`)\r\n        const data = res.data\r\n\r\n        dispatch({type:\"GET_TRAILER\",payload:data})\r\n    } \r\n}\r\nexport const getMovie = (path) => {\r\n    return async (dispatch) => {\r\n        if(!path){\r\n            dispatch({type:\"GET_MOVIE\",payload:path})\r\n        }\r\n        else{\r\n            const res = await axios.get(`https://api.themoviedb.org/3/${path}?api_key=af64c5c103f265313a6fa2368d35c51a`)\r\n            const data = res.data\r\n            dispatch({type:\"GET_MOVIE\",payload:data})\r\n        }\r\n    } \r\n}\r\nexport const getTv = (path) => {\r\n    return async (dispatch) => {\r\n        if(!path){\r\n            dispatch({type:\"GET_TV\",payload:path})\r\n        }\r\n        else{\r\n            const res = await axios.get(`https://api.themoviedb.org/3/${path}?api_key=af64c5c103f265313a6fa2368d35c51a`)\r\n            const data = res.data\r\n            dispatch({type:\"GET_TV\",payload:data})\r\n        }\r\n    } \r\n}\r\nexport const getSingleTrailer = (path) => {\r\n    return async (dispatch) => {\r\n        if(!path){\r\n            dispatch({type:\"GET_SINGLE_TRAILER\",payload:path})\r\n        }\r\n        else{\r\n            const res = await axios.get(`https://api.themoviedb.org/3${path}/videos?api_key=af64c5c103f265313a6fa2368d35c51a&language=en-US`)\r\n            const data = res.data\r\n\r\n            dispatch({type:\"GET_SINGLE_TRAILER\",payload:data})\r\n        }\r\n    } \r\n}","import { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { logo } from \"../../imgs/imgs\";\r\nimport { chooseVersion } from \"../../store/actions/chooseVersion\";\r\nconst NavBar = ({ navClass, chooseVersion }) => {\r\n    const [active, setActive] = useState(false);\r\n    const input = useRef(null);\r\n    const handleClick = () => {\r\n        setActive(false);\r\n    };\r\n    const changeHandler = e => {\r\n        e.target.checked ? chooseVersion(\"light\") : chooseVersion(\"dark\");\r\n    };\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"version\")) {\r\n            chooseVersion(\"dark\");\r\n        } else {\r\n            chooseVersion(localStorage.getItem(\"version\"));\r\n            input.current.checked = localStorage.getItem(\"version\") === \"light\";\r\n        }\r\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <nav\r\n            className={`${navClass} px-3 px-sm-4 px-md-5 py-2 py-sm-3 py-lg-4 d-flex align-items-center flex-wrap flex-lg-nowrap`}>\r\n            <NavLink to=\"/home\" className=\"logo\">\r\n                <img className=\"img-fluid\" src={logo} alt=\"logo\" />\r\n            </NavLink>\r\n\r\n            <div\r\n                onClick={() => setActive(!active)}\r\n                className=\"icon d-lg-none text-white flex-content-center flex-wrap\">\r\n                <div className=\"father\">\r\n                    <span className={active ? \"active1\" : \"\"}></span>\r\n                    <span className={active ? \"active2\" : \"\"}></span>\r\n                    <span className={active ? \"active3\" : \"\"}></span>\r\n                </div>\r\n            </div>\r\n            <div className={`${active ? \"active\" : \"\"} links-container `}>\r\n                <div className={`links`}>\r\n                    <ul>\r\n                        <li onClick={handleClick}>\r\n                            <NavLink exact to=\"/\" activeClassName=\"active\">\r\n                                Home\r\n                            </NavLink>\r\n                        </li>\r\n                        <li onClick={handleClick}>\r\n                            <NavLink\r\n                                to=\"/watch/movies\"\r\n                                activeClassName=\"active\">\r\n                                Movies\r\n                            </NavLink>\r\n                        </li>\r\n                        <li onClick={handleClick}>\r\n                            <NavLink to=\"/watch/tv\" activeClassName=\"active\">\r\n                                Tv\r\n                            </NavLink>\r\n                        </li>\r\n                        <li onClick={handleClick}>\r\n                            <NavLink to=\"/news\" activeClassName=\"active\">\r\n                                News\r\n                            </NavLink>\r\n                        </li>\r\n                        <li onClick={handleClick}>\r\n                            <NavLink to=\"/signup\" activeClassName=\"active\">\r\n                                Sign Up\r\n                            </NavLink>\r\n                        </li>\r\n                        <li onClick={handleClick}>\r\n                            <NavLink to=\"/signin\" activeClassName=\"active\">\r\n                                Sign In\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                    <ul>\r\n                        <li>\r\n                            <NavLink\r\n                                className=\"profile bg-primary text-uppercase\"\r\n                                to=\"/profile\">\r\n                                YS\r\n                            </NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <div className=\"toggle-button-cover\">\r\n                                <div className=\"button-cover\">\r\n                                    <div className=\"button r\" id=\"button-3\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            onChange={changeHandler}\r\n                                            ref={input}\r\n                                            className=\"checkbox\"\r\n                                        />\r\n\r\n                                        <div className=\"knobs\"></div>\r\n                                        <div className=\"layer\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default connect(null, { chooseVersion })(NavBar);\r\n","export const chooseVersion = version => {\r\n    return dispatch => {\r\n        localStorage.setItem(\"version\", version);\r\n        dispatch({ type: \"CHOOSE_VERSION\", payload: version });\r\n    };\r\n};\r\n","import {Link} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport {getSingleTrailer,getTv,getMovie} from \"../../store/actions/moviesAction\"\r\nconst SearchResult = ({results,focussed,getSingleTrailer,getTv,getMovie}) => {\r\n    return (\r\n        <div className=\"results rela\">\r\n            <ul className=\"bg-nav text-capitalize\">\r\n                {results && results.map(result => {\r\n                    const {title,name,backdrop_path,id,media_type} = result\r\n                    const currentMedia = media_type === \"tv\" ? \"tv\" : \"movies\"\r\n                    return (\r\n                        <li key={id}>\r\n                            <Link onClick={() => {\r\n                                getMovie(null)\r\n                                getTv(null)\r\n                                getSingleTrailer(null) \r\n                            }} className=\"d-flex  p-2  flex-row align-items-center\" to={`/watch/${currentMedia}/${id}`} >\r\n                                <div className=\"img mr-4\">\r\n                                    <img className=\"img-fluid\" src={!backdrop_path ? \"\" : `https://image.tmdb.org/t/p/w200${backdrop_path}`} alt=\"poster\" />\r\n                                </div>\r\n                                <p className=\"m-0\">{title || name} </p>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n\r\n                })}\r\n                \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null,{\r\n    getSingleTrailer,\r\n    getTv,\r\n    getMovie\r\n})(SearchResult)","import { useState, useEffect, useRef } from \"react\";\r\nimport { IoMdSearch } from \"react-icons/io\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    getSearch,\r\n    getAutoCompleteSearch,\r\n} from \"../../store/actions/moviesAction\";\r\nimport { handleInput } from \"../../store/actions/handleInputAction\";\r\nimport { connect } from \"react-redux\";\r\nimport SearchResult from \"../parts/SearchResult\";\r\nconst SearchBar = ({\r\n    className,\r\n    getSearch,\r\n    value,\r\n    handleInput,\r\n    autoCompleteSearchResults,\r\n    getAutoCompleteSearch,\r\n}) => {\r\n    const [focussed, setFocus] = useState(false);\r\n    const [results, setResults] = useState(null);\r\n    const input = useRef(null);\r\n    const history = useHistory();\r\n    const handleChange = e => {\r\n        handleInput(e.target.value);\r\n        localStorage.setItem(\"searchValue\", e.target.value);\r\n        clearTimeout();\r\n        setTimeout(() => {\r\n            getAutoCompleteSearch(e.target.value, 1);\r\n        }, 500);\r\n    };\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        getSearch(value, 1);\r\n        input.current.blur();\r\n        history.push(\"/search\");\r\n    };\r\n    useEffect(() => {\r\n        if (focussed)\r\n            setResults(\r\n                autoCompleteSearchResults &&\r\n                    autoCompleteSearchResults.results.slice(0, 5),\r\n            );\r\n        return () => {\r\n            if (focussed)\r\n                setResults(\r\n                    autoCompleteSearchResults &&\r\n                        autoCompleteSearchResults.results.slice(0, 5),\r\n                );\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [autoCompleteSearchResults]);\r\n    return (\r\n        <>\r\n            <form\r\n                className=\"SearchBarForm\"\r\n                autoComplete={\"off\"}\r\n                onSubmit={handleSubmit}>\r\n                <div\r\n                    className={`${className} rela input-group search-bar mt-3`}>\r\n                    <div className=\"input-group-prepend\"></div>\r\n                    <input\r\n                        ref={input}\r\n                        onFocus={() => {\r\n                            setResults(\r\n                                autoCompleteSearchResults &&\r\n                                    autoCompleteSearchResults.results.slice(\r\n                                        0,\r\n                                        5,\r\n                                    ),\r\n                            );\r\n                            setFocus(true);\r\n                        }}\r\n                        onBlur={() => {\r\n                            setTimeout(() => {\r\n                                setResults(null);\r\n                                setFocus(false);\r\n                            }, 300);\r\n                        }}\r\n                        type=\"text\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        required\r\n                        className=\"form-control search bg-nav\"\r\n                        id=\"inlineFormInputGroupUsername\"\r\n                        placeholder=\"Search...\"\r\n                    />\r\n                    <button type=\"submit\">\r\n                        <IoMdSearch />{\" \"}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n            <SearchResult focussed={focussed} results={results} />\r\n        </>\r\n    );\r\n};\r\nconst getState = state => {\r\n    return {\r\n        autoCompleteSearchResults: state.movies.autoCompleteSearchResults,\r\n        value: state.input,\r\n    };\r\n};\r\n\r\nexport default connect(getState, {\r\n    getSearch,\r\n    getAutoCompleteSearch,\r\n    handleInput,\r\n})(SearchBar);\r\n","export const handleInput = value => {\r\n    return {\r\n        type: \"HANDLE_INPUT\",\r\n        payload: value,\r\n    };\r\n};\r\n","import { headerImg } from \"../../imgs/imgs\";\r\nimport NavBar from \"./NavBar\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nconst Header = props => {\r\n    const {\r\n        headerClass,\r\n        children,\r\n\r\n        searchClass = \"\",\r\n    } = props;\r\n    const { ref, inView } = useInView({});\r\n\r\n    const completeShared = (\r\n        <>\r\n            <NavBar navClass={`${inView ? \"\" : \"fixed\"}`} />\r\n            <Container className={searchClass}>\r\n                <SearchBar />\r\n            </Container>\r\n        </>\r\n    );\r\n    return (\r\n        <header\r\n            ref={ref}\r\n            className={`${headerClass} `}\r\n            style={{ backgroundImage: `url(${headerImg})` }}>\r\n            {completeShared}\r\n\r\n            {children}\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import {IoIosStar} from \"react-icons/io\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\nimport {getSingleTrailer,getMovie,getTv} from \"../../store/actions/moviesAction\"\r\nconst SingleMovieCard = ({movie,version = localStorage.getItem(\"version\"),kind,getSingleTrailer,getMovie,getTv}) => {\r\n    const {title,poster_path,vote_average,id,name} = movie\r\n    const posterPath = \"https://image.tmdb.org/t/p/w200\"\r\n    return (\r\n        <Link onClick={() => {\r\n                getSingleTrailer(null)\r\n                getTv(null)\r\n                getMovie(null)\r\n            }} to={`/watch/${kind}/${id}`} className=\"movieCard\">\r\n            <div className=\"img  mb-2 text-center\">\r\n                    {poster_path ? <img className=\"img-fluid\" src={`${posterPath}${poster_path}`} alt=\"poster\" /> : <div className=\"mx-auto\">no poster available</div> }\r\n            </div>\r\n            <div className={`${version} info  `}>\r\n                <h4 className=\" mb-2 \">{title || name} </h4>\r\n                <div className={` d-flex justify-content-center align-items-center mb-0 `}>\r\n                    <span><IoIosStar /></span>\r\n                    <big>{vote_average}</big>\r\n                    <small>/10</small>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nconst getState = state => {\r\n    return {\r\n        version:state.version\r\n    }\r\n}\r\n\r\nexport default connect(getState,{\r\n    getSingleTrailer,\r\n    getMovie,\r\n    getTv\r\n})(SingleMovieCard)","import { useState, useEffect } from \"react\";\r\nimport { IoIosArrowForward, IoIosArrowBack } from \"react-icons/io\";\r\n\r\nconst GetMorePages = ({\r\n    version,\r\n    startingPage,\r\n    total,\r\n    getPage,\r\n    type = null,\r\n}) => {\r\n    const [page, setPage] = useState(startingPage);\r\n    const handleClick = (direction, amount) => {\r\n        clearTimeout();\r\n        setTimeout(() => {\r\n            if (direction === \"increase\") {\r\n                if (page < total) {\r\n                    setPage(page + amount);\r\n                    getPage(page + amount);\r\n                }\r\n            } else {\r\n                if (page > 1) {\r\n                    setPage(page - 1);\r\n                    getPage(page - 1);\r\n                }\r\n            }\r\n        }, 500);\r\n    };\r\n    useEffect(() => {\r\n        setPage(1);\r\n        getPage(1);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [type]);\r\n    useEffect(() => {\r\n        setPage(1);\r\n        getPage(1);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [total]);\r\n\r\n    return (\r\n        <div className={`${version} mt-4 mx-auto PagesButtons`}>\r\n            <button\r\n                className={`${page === 1 ? \"disable\" : \"\"}`}\r\n                onClick={() => handleClick(\"descrease\")}>\r\n                <IoIosArrowBack />{\" \"}\r\n            </button>\r\n            <button className=\"active\">{page} </button>\r\n            <button\r\n                className={`${page + 1 > total ? \"disable\" : \"\"}`}\r\n                onClick={() => handleClick(\"increase\", 1)}>\r\n                {page + 1}{\" \"}\r\n            </button>\r\n            <button\r\n                className={`${page + 2 > total ? \"disable\" : \"\"}`}\r\n                onClick={() => handleClick(\"increase\", 2)}>\r\n                {page + 2}{\" \"}\r\n            </button>\r\n            <button\r\n                className={`${page + 1 > total ? \"disable\" : \"\"}`}\r\n                onClick={() => handleClick(\"increase\", 1)}>\r\n                <IoIosArrowForward />{\" \"}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default GetMorePages;\r\n","\r\n\r\nconst MovieCardLoading = () => {\r\n    return (\r\n        <div className=\"movieCardLoading\">\r\n            <div className=\"img  rela mb-2\"></div>\r\n            <div className=\" mb-2 rela title \"> </div>\r\n            <div className=\" stars rela  \"></div> \r\n        </div>\r\n    )\r\n}\r\nexport default MovieCardLoading","import { useState, useEffect } from \"react\";\r\nimport SingleMovieCard from \"./SingleMovieCard\";\r\nimport MovieCardLoading from \"./MovieCardLoading\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { getTrailer } from \"../../store/actions/moviesAction\";\r\nconst itemsInSLider = (arg1, arg2, arg3, arg4, arg5) => {\r\n    if (window.innerWidth < 576) return arg1;\r\n    else if (window.innerWidth < 768 && window.innerWidth >= 576) return arg2;\r\n    else if (window.innerWidth < 992 && window.innerWidth >= 768) return arg3;\r\n    else if (window.innerWidth < 1200 && window.innerWidth >= 992) return arg4;\r\n    else return arg5;\r\n};\r\n\r\nconst RenderSlider = props => {\r\n    const { movies, loop, trailer, kind } = props;\r\n    const [, setDimensions] = useState({\r\n        height: window.innerHeight,\r\n        width: window.innerWidth,\r\n    });\r\n    window.addEventListener(\"resize\", () => {\r\n        setDimensions({\r\n            height: window.innerHeight,\r\n            width: window.innerWidth,\r\n        });\r\n    });\r\n    const [activeTrailer, setActiveTrailer] = useState({\r\n        activeMovie: null,\r\n        trailer: trailer,\r\n    });\r\n    const bringTrailer = id => {\r\n        if (!trailer || trailer.id !== id) {\r\n            props.getTrailer(`/movie/${id}/videos`);\r\n            setActiveTrailer({\r\n                activeMovie: id,\r\n                trailer: trailer,\r\n            });\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        setActiveTrailer(old => {\r\n            return {\r\n                ...old,\r\n                trailer: trailer,\r\n            };\r\n        });\r\n    }, [trailer]);\r\n\r\n    if (!movies) {\r\n        return (\r\n            <Row>\r\n                <Col xs=\"6\" md=\"4\" lg=\"3\">\r\n                    <MovieCardLoading />\r\n                </Col>\r\n                <Col xs=\"6\" md=\"4\" lg=\"3\">\r\n                    <MovieCardLoading />\r\n                </Col>\r\n                <Col className=\"d-none d-md-block\" md=\"4\" lg=\"3\">\r\n                    <MovieCardLoading />\r\n                </Col>\r\n                <Col className=\"d-none d-lg-block\" lg=\"3\">\r\n                    <MovieCardLoading />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n    return (\r\n        <Swiper\r\n            navigation\r\n            spaceBetween={itemsInSLider(15, 20, 20, 20, 20)}\r\n            slidesPerView={itemsInSLider(2, 2, 3, 4, 5)}\r\n            loop={loop}\r\n            centeredSlides={!loop}>\r\n            {movies &&\r\n                movies.results.map((movie, ind) => {\r\n                    return (\r\n                        <SwiperSlide key={ind}>\r\n                            {!trailer ? (\r\n                                <SingleMovieCard kind={kind} movie={movie} />\r\n                            ) : (\r\n                                <div\r\n                                    id={movie.id}\r\n                                    onClick={() => bringTrailer(movie.id)}\r\n                                    className={`${\r\n                                        movie.id === activeTrailer.activeMovie\r\n                                            ? \"active\"\r\n                                            : \"\"\r\n                                    }  recommends text-center d-flex align-items-center flex-wrap`}>\r\n                                    <div className=\"img w-100\">\r\n                                        <img\r\n                                            src={`https://image.tmdb.org/t/p/w200/${movie.backdrop_path}`}\r\n                                            alt=\"poster\"\r\n                                            className=\"img-fluid\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"text-center w-100 mt-2\">\r\n                                        <h5 className=\"\">{movie.title} </h5>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </SwiperSlide>\r\n                    );\r\n                })}\r\n        </Swiper>\r\n    );\r\n};\r\nexport default connect(null, {\r\n    getTrailer,\r\n})(RenderSlider);\r\n","import {useEffect,useState} from \"react\"\r\nimport {\r\n    getPopular,\r\n    getTvPopular,\r\n    getComingSoon,\r\n    getTopRated,\r\n    getTvComingSoon,\r\n    getTvTopRated \r\n} from \"../../store/actions/moviesAction\"\r\nimport {connect} from \"react-redux\"\r\n\r\nconst RenderMoviesHeading = (props) => {\r\n    const {\r\n        getMTType,\r\n        kind,\r\n        popular,\r\n        tvPopular,\r\n        comingSoon,\r\n        topRated,\r\n        tvComingSoon,\r\n        tvTopRated,\r\n        version = localStorage.getItem(\"version\"),\r\n        page\r\n    } = props\r\n    const [lis,setLis] = useState({\r\n            moviesLinks : [\r\n                {\r\n                    id:0,\r\n                    content:\"#popular\",\r\n                    data:\"popular\",\r\n                    func:\"getPopular\"\r\n                    \r\n                },\r\n                {\r\n                    id:1,\r\n                    \r\n                    content:\"#coming soon\",\r\n                    data:\"comingSoon\",\r\n                    func:\"getComingSoon\"\r\n                },\r\n                {\r\n                    id:2,\r\n                    content:\"#top rated\",\r\n                    data:\"topRated\",\r\n                    func:\"getTopRated\"\r\n                }\r\n            ],\r\n            tvLinks : [\r\n                {\r\n                    id:0,\r\n                    content:\"#popular\",\r\n                    data:\"tvPopular\",\r\n                    func:\"getTvPopular\"\r\n                },\r\n                {\r\n                    id:1,\r\n                    \r\n                    content:\"#coming soon\",\r\n                    data:\"tvComingSoon\",\r\n                    func:\"getTvComingSoon\"\r\n                },\r\n                {\r\n                    id:2,\r\n                    content:\"#top rated\",\r\n                    data:\"tvTopRated\",\r\n                    func:\"getTvTopRated\"\r\n                },\r\n            ],\r\n        activeLinkMovie:0,\r\n        activeLinkTv:0\r\n    })\r\n    const [mTType,setMTType ] = useState({\r\n        movies:popular,\r\n        tv:tvPopular\r\n    })\r\n    let moviesActionRes = {popular,comingSoon,topRated}\r\n    let tvActionRes = {tvPopular,tvComingSoon,tvTopRated}\r\n    const setActive = (id,tvId,kind) => {\r\n        if(kind === \"movie\"){\r\n            if(lis.activeLinkMovie !== id){\r\n                setLis({\r\n                    ...lis,\r\n                    activeLinkMovie:id\r\n                })\r\n                if(!moviesActionRes[lis.moviesLinks[id].data]) props[lis.moviesLinks[id].func](1)\r\n                setMTType(m => {\r\n                    return {\r\n                        ...m,\r\n                        movies:moviesActionRes[lis.moviesLinks[id].data]\r\n                    }\r\n                })\r\n                getMTType({\r\n                    ...mTType,\r\n                    movies:moviesActionRes[lis.moviesLinks[id].data]\r\n                })\r\n            }\r\n        }else{\r\n            if(lis.activeLinkTv !== tvId){\r\n                setLis({\r\n                    ...lis,\r\n                    activeLinkTv:tvId\r\n                })\r\n                if(!tvActionRes[lis.tvLinks[tvId].data]) props[lis.tvLinks[tvId].func](1)\r\n                setMTType(m => {\r\n                    return {\r\n                        ...mTType,\r\n                        tv:tvActionRes[lis.tvLinks[tvId].data]\r\n                    }\r\n                })\r\n                getMTType({\r\n                    ...mTType,\r\n                    tv:tvActionRes[lis.tvLinks[tvId].data]\r\n                })\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setMTType(m => {\r\n            return {\r\n                ...m,\r\n                movies:moviesActionRes[lis.moviesLinks[lis.activeLinkMovie].data]\r\n            }\r\n        })\r\n        getMTType({\r\n            ...mTType,\r\n            movies:moviesActionRes[lis.moviesLinks[lis.activeLinkMovie].data]\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[moviesActionRes[lis.moviesLinks[lis.activeLinkMovie].data]])\r\n    useEffect(() => {\r\n        setMTType({\r\n            ...mTType,\r\n            tv:tvActionRes[lis.tvLinks[lis.activeLinkTv].data]\r\n        })\r\n        getMTType({\r\n            ...mTType,\r\n            tv:tvActionRes[lis.tvLinks[lis.activeLinkTv].data]\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[tvActionRes[lis.tvLinks[lis.activeLinkTv].data]])\r\n    useEffect(() => {\r\n        if(kind === \"movies\") props[lis.moviesLinks[lis.activeLinkMovie].func](page)\r\n        else props[lis.tvLinks[lis.activeLinkTv].func](page)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[page])\r\n    return (\r\n        <>\r\n        <ul className={`type ${version} mb-5 text-capitalize`}>\r\n            {kind === \"movies\" ? (\r\n                <>\r\n                    {lis.moviesLinks.map((ele,ind) => {\r\n                        return <li key={ind} className={`${ele.id === lis.activeLinkMovie ? \"active\" : \"\"} d-md-inline-block text-pColor`} onClick={() => setActive(ele.id,lis.activeLinkTv,\"movie\")} >{ele.content} </li>\r\n                    })}\r\n                </>\r\n            ) : (\r\n                <>\r\n                    {lis.tvLinks.map((ele,ind) => {\r\n                        return <li key={ind} className={`${ele.id === lis.activeLinkTv ? \"active\" : \"\"} d-md-inline-block text-pColor`} onClick={() => setActive(lis.activeLinkMovie,ele.id,\"tv\")} >{ele.content} </li>\r\n                    })}\r\n                </> \r\n            )}\r\n        </ul>\r\n        </>\r\n    )\r\n}\r\nconst getState = (state) => {\r\n    return {\r\n        version:state.version,\r\n        popular:state.movies.popular,\r\n        comingSoon:state.movies.comingSoon,\r\n        topRated:state.movies.topRated,\r\n        tvPopular:state.movies.tvPopular,\r\n        tvComingSoon:state.movies.tvComingSoon,\r\n        tvTopRated:state.movies.tvTopRated\r\n    }\r\n}\r\n\r\nexport default connect(getState,{\r\n    getPopular,\r\n    getComingSoon,\r\n    getTopRated,\r\n    getTvPopular,\r\n    getTvComingSoon,\r\n    getTvTopRated\r\n})(RenderMoviesHeading)","import {useState} from \"react\"\r\nimport RenderMoviesHeading from \"./RenderMoviesHeading\"\r\nimport RenderSlider from \"./RenderSlider\"\r\nimport {Col,Row} from \"react-bootstrap\"\r\nimport {connect} from \"react-redux\"\r\nimport SingleMovieCard  from \"./SingleMovieCard\"\r\nimport GetMorePages from \"../parts/GetMorePages\"\r\nconst RenderMovies = (props) => {\r\n    const {kind,popular,tvPopular,version = localStorage.getItem(\"version\"),slider = true} = props\r\n    const [mTType,setMTType] = useState({\r\n        movies:popular,\r\n        tv:tvPopular\r\n    })\r\n    const getMTType = (obj) => {\r\n        setMTType(obj)\r\n    }\r\n    const [page,setPage] = useState(1)\r\n    const getPage = (currentPage) => {\r\n        setPage(currentPage)\r\n    }\r\n    return (\r\n        <>\r\n        <RenderMoviesHeading kind={kind} getMTType={getMTType} page={page} />\r\n        {slider ? (\r\n            <div className=\"slider mb-5\">\r\n                <RenderSlider kind={kind} movies={kind === \"movies\" ? mTType.movies : mTType.tv} loop={false} trailer={false} />\r\n            </div>\r\n        ): (\r\n            <>\r\n                \r\n                    <Row >\r\n                        {mTType[kind] && mTType[kind].results.map((item) => {\r\n                            return (\r\n                                <Col key={item.id} className=\"mb-4 mx-auto\" xs=\"6\" md=\"4\" lg=\"3\">\r\n                                    <SingleMovieCard kind={kind} movie={item} version={version} />\r\n                                </Col>\r\n                            )\r\n                        })}\r\n                    </Row>\r\n                    <GetMorePages getPage={getPage} type={kind} startingPage={mTType[kind] && mTType[kind].page} total={mTType[kind] && mTType[kind].total_pages} version={version} />\r\n                \r\n                \r\n            </>\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nconst getState = state => {\r\n    return {\r\n        popular:state.movies.popular,\r\n        tvPopular:state.movies.tvPopular,\r\n        version:state.version\r\n    }\r\n}\r\n\r\nexport default connect(getState)(RenderMovies)"],"sourceRoot":""}